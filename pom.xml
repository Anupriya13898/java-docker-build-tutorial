<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.miguno</groupId>
    <artifactId>java-docker-build</artifactId>
    <packaging>jar</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>java-docker-build</name>
    <description>A template project to create a minimal Docker image for a Java application</description>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <java.version>21</java.version>
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <maven.reports-plugin.version>3.5.0</maven.reports-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <quarkus.analytics.disabled>true</quarkus.analytics.disabled>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.10.0</quarkus.platform.version>
        <spotbugs.version>4.8.5</spotbugs.version>
        <spotbugs-maven-plugin.version>4.8.5.0</spotbugs-maven-plugin.version>
        <!-- spotbugs plugin for security audits of web apps -->
        <findsecbugs.version>1.12.0</findsecbugs.version>
        <surefire-plugin.version>3.2.5</surefire-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-rest-jackson</artifactId>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <!--
          For `mvn package`: Set the name of the packaged (uber / fat) jar.

          Normally, you would set this to "app.jar". But with Quarkus, do not add
          the ".jar" filename suffix. If fileName is "app", Quarkus will by default
          use the output filename "app-runner.jar".  For Quarkus, you must also
          set `quarkus.package.jar.type=uber-jar` in
          `src/main/resources/application.properties`.
          https://quarkus.io/guides/maven-tooling#uber-jar-maven
        -->
        <finalName>app</finalName>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <!-- Make sure tests use the correct logmanager. -->
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <!--
                          `maven.home` is set to ensure that custom settings from
                          `${maven.home}/conf/settings.xml` is applied (if any).
                        -->
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                https://spotbugs.github.io/spotbugs-maven-plugin/
                https://spotbugs.readthedocs.io/en/latest/maven.html
                https://github.com/find-sec-bugs/find-sec-bugs/wiki/Maven-configuration
                Run `./mvnw spotbugs:help` for usage.
            -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <dependencies>
                    <!-- overwrite dependency on spotbugs to specify the version of spotbugs -->
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
                <!-- IMPORTANT: Should match spotbugs configuration for `<reporting>` below. -->
                <configuration>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <failOnError>true</failOnError>
                    <includeFilterFile>spotbugs-include.xml</includeFilterFile>
                    <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
                    <plugins>
                        <!-- https://github.com/find-sec-bugs/find-sec-bugs -->
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${findsecbugs.version}</version>
                        </plugin>
                    </plugins>

                    <!-- XML output settings are not needed in the `<reporting>` section. -->
                    <xmlOutput>true</xmlOutput>
                    <xmlOutputDirectory>${project.basedir}/target/site</xmlOutputDirectory>
                </configuration>
                <executions>
                    <!-- Run `spotbugs:check` when running `./mvnw verify`. -->
                    <execution>
                        <id>verify-runs-spotbugs</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                    <!-- Run `spotbugs:check` when running `./mvnw package`. -->
                    <execution>
                        <id>package-runs-spotbugs</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven.reports-plugin.version}</version>
            </plugin>

            <!-- Create a spotbugs report when running `./mvnw site`. -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <!-- IMPORTANT: Should match spotbugs configuration for `<build>` above. -->
                <configuration>
                    <jvmArgs>-Duser.language=en</jvmArgs>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <failOnError>true</failOnError>
                    <includeFilterFile>spotbugs-include.xml</includeFilterFile>
                    <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
                    <plugins>
                        <!-- https://github.com/find-sec-bugs/find-sec-bugs -->
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${findsecbugs.version}</version>
                        </plugin>
                    </plugins>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <!-- Do not skip integration tests. -->
                <skipITs>false</skipITs>
                <quarkus.native.enabled>true</quarkus.native.enabled>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${surefire-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <native.image.path>
                                            ${project.build.directory}/${project.build.finalName}-runner
                                        </native.image.path>
                                        <java.util.logging.manager>org.jboss.logmanager.LogManager
                                        </java.util.logging.manager>
                                        <maven.home>${maven.home}</maven.home>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
